@model IEnumerable<eShopSolution.ViewModels.Sales.OrderVm>
@using eShopSolution.Utilities.Constants
@using Microsoft.AspNetCore.Http


@{
    ViewData["Title"] = "Danh sách đơn hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@section Scripts{
    <script>
        
        setInterval(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);
        const message = document.getElementById('mess-box');

        const token = "@Context.Session.GetString(SystemConstants.AppSettings.Token)";
        $(".status-check").change(function (event) {
         
            const orderId = $(this).attr('itemid');
            const orderStatus = $(this).attr('itemprop');
            
            
            const url = `https://localhost:5001/api/orders/${orderId}/${orderStatus}`;
            fetch(url, {
                method: 'PUT', headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
                .then(response => {
                    if (response.ok) {
                        message.innerHTML = ` <div id="msgAlert" class="alert alert-success" role="alert">
                                                Cập nhật thành công
                                    </div>`
                    } else {

                    }
                })
                .catch(error => {   
                    console.log(error)
                    // Handle fetch error
                    // For example, display an error message or handle the error condition
                });
        });
       

    </script>
}
 <style>
            @@import 'https://fonts.googleapis.com/css?family=Roboto:100,300';
            @@import 'https://cdnjs.cloudflare.com/ajax/libs/simple-line-icons/2.3.2/css/simple-line-icons.min.css';
            @@import 'https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css';
            @@import 'https://fonts.googleapis.com/css?family=Roboto+Mono:300,700';
           
            h1 {
                text-align: center;
                color: #fff;
                font-weight: 600;
                font-size: 3em;
                letter-spacing: 0px;
                text-shadow: 1px 1px rgba(0, 0, 0, 0.02),
                    2px 2px rgba(0, 0, 0, 0.02), 3px 3px rgba(0, 0, 0, 0.02),
                    4px 4px rgba(0, 0, 0, 0.02), 5px 5px rgba(0, 0, 0, 0.02),
                    6px 6px rgba(0, 0, 0, 0.02), 7px 7px rgba(0, 0, 0, 0.02);
            }
            h1 i {
                position: relative;
                font-size: 70px;
            }
            p {
                text-align: center;
                color: #fff;
                font-size: 14px;
                margin-bottom: 2em;
                line-height: 30px;
            }
            p img {
                position: relative;
                top: 8px;
                right: 10px;
            }
            .select2 {
                position: relative;
                overflow: hidden;
                display: block;
                height: 100%;
                border-bottom: 0px;
                border-radius: 3px;
                font-size: 12px;
                /*box-shadow: 0px 1em 2em -1.5em rgba(0, 0, 0, 0.5);*/
            }
            .select2 i.toggle {
                position: absolute;
                z-index: 4;
                right: 1.5em;
                top: 1.2em;
                color: #ccc;
            }
            .select2 .title,
            .select2 .placeholder {
                position: relative;
                display: block;
                width: 100%;
                height: 100%;
                padding: 0.9em 2em;
                background: rgba(255, 255, 255, 1);
                border-top: 1px solid rgba(0, 0, 0, 0.05);
                cursor: pointer;
            }
            .select2 > label > input {
                position: absolute;
                left: 0px;
                top: 0px;
                z-index: 2;
                width: 100%;
                height: 100%;
                display: block;
                opacity: 0;
                cursor: pointer;
            }
            .select2 > label > input:checked {
                z-index: 2;
            }
            .select2 > label > input:checked ~ i.toggle.icon-plus {
                display: none;
            }
            .select2 > label > input:checked ~ i.toggle.icon-minus {
                display: block;
            }
            .select2 > label > input:not(:checked) ~ i.toggle.icon-minus {
                display: none;
            }
            .select2 > label > input:not(:checked) ~ i.toggle.icon-plus {
                display: block;
            }
            .select2
                > label
                > input:not(:checked)
                ~ label.option
                input:not(:checked)
                ~ .title {
                display: none !important;
            }
            .select2 > label > input:disabled {
                cursor: no-drop;
            }
            .select2 label > span.placeholder {
                position: relative;
                z-index: 0;
                display: inline-block;
                width: 100%;
                color: #999;
                border-top: 0px;
            }
            .select2 label.option {
                display: block;
                overflow: hidden;
                z-index: 1;
                width: 100%;
                transition: all 1s ease-out;
            }
            .select2 label.option span.title {
                position: relative;
                z-index: 2;
                transition: background 0.3s ease-out;
            }
            .select2 label.option span.title i {
                padding-right: 8px;
                color: rgba(146, 168, 209, 1);
            }
            .select2 label.option span.title:hover {
                color: #fff;
                background: rgba(146, 168, 209, 0.5);
                box-shadow: inset 0px 1px 0px rgba(0, 0, 0, 0.1);
            }
            .select2 label.option input {
                display: none;
            }
            .select2 label.option input:checked ~ span.title {
                position: absolute;
                display: block;
                z-index: 1;
                top: 0px;
                font-size: 12px;
                background: #fff;
                border-top: 0px;
                box-shadow: none;
                color: inherit;
                width: 100%;
            }
            .select2 label.option input:disabled ~ span.title {
                background: #f9f9f9 !important;
                color: #aaa;
            }
            .select2 label.option input:disabled ~ span.title:hover {
                color: #aaa;
                background: none;
                cursor: no-drop;
            }
        </style>
    <div class="container-fluid">
        <div class="pagetitle">
            <h1>Danh mục sản phẩm</h1>
            <nav>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item active">Đơn hàng</li>
                    <li class="breadcrumb-item active">Danh sách đơn hàng</li>
                </ol>
            </nav>
        </div><!-- End Page Title -->
        <div class="card mb-12">
            <div class="card-header">
                <div class="row">
                    
                </div>
            </div>
            <div class="card-body" >
                <div class="row" id="mess-box">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }
            </div>
            <div class="table-responsive">
                <table class="table datatable table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">OrderDate</th>
                            <th scope="col">ShipName</th>
                            <th scope="col">ShipPhoneNumber</th>
                            <th scope="col">ShipAddress</th>
                            <th scope="col">ShipEmail</th>
                            <th scope="col">TotalPrice</th>
                            <th scope="col">OrderStatus</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model)
                        {
                            <tr class="table-row">
                                <td class="table-data" width="80px">
                                    @{
                                        string originalString = item.Id.ToString();
                                        int startIndex = originalString.IndexOf('e')+1;
                                        int endIndex = originalString.IndexOf("86") + 2; // Adding 2 to include '86' in the substring

                                        string extractedSubstring = originalString.Substring(startIndex, endIndex - startIndex) + "...";
                                    }
                                    @Html.DisplayFor(modelItem => extractedSubstring )
                                </td>
                                <td class="table-data">
                                    @Html.DisplayFor(modelItem => item.OrderDate)
                                </td>
                                <td class="table-data">
                                    @Html.DisplayFor(modelItem => item.ShipName)
                                </td>
                                <td class="table-data">
                                    @Html.DisplayFor(modelItem => item.ShipPhoneNumber)
                                </td>
                                <td class="table-data">
                                    @Html.DisplayFor(modelItem => item.ShipAddress)
                                </td>
                                <td class="table-data">
                                    @Html.DisplayFor(modelItem => item.ShipEmail)
                                </td>
                                <td class="table-data">
                                    @Html.DisplayFor(modelItem => item.TotalPrice)
                                </td>
                                <td class="table-data">
                                    
                                    <div class="select2 animated zoomIn">
                                        <label style="width: 164px">
                                            <input type="checkbox" name="placeholder" id="myinput"/>
                                            <i class="toggle icon icon-plus"></i>
                                            <i class="toggle icon icon-minus"></i>
                                            <span class="placeholder">
                                                <i class="bi bi-bag-check"></i>

                                                @Html.DisplayFor(modelItem => item.OrderStatus)
                                            </span>
                                  
                                                @foreach (var state in ViewBag.Status)
                                                {
                                                    <label class="option">
                                                        <input itemid="@item.Id" itemprop="@state" type="radio" class="status-check" name="option" />
                                                        <span class="title animated fadeIn">
                                                            @if (state.ToString() == "InProgress")
                                                            {
                                                                <i class="fa-solid fa-repeat"></i>
                                                            }
                                                            else if (state.ToString() == "Confirmed")
                                                            {
                                                                <i class="bi bi-bag-check"></i>

                                                            }
                                                            else if (state.ToString() == "Shipping")
                                                            {
                                                                <i class="fa-solid fa-truck-fast"></i>
                                                            }
                                                            else if (state.ToString() == "Canceled")
                                                            {
                                                                <i class="bi bi-bag-x"></i>
                                                            }
                                                            else if (state.ToString() == "Success")
                                                            {
                                                                <i class="fa-solid fa-money-bill-transfer"></i>
                                                            }

                                                            @state
                                                        </span>
                                                    </label>
                                                }
                                           
                                          
                                        </label>
                                    </div>
                                </td>
                                <td class="table-data">
                                    @Html.ActionLink("Details", "Detail", new { id = item.Id },new {@class = "btn btn-outline-info"})
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new {@class = "btn btn-outline-danger"})
                                </td>
                            </tr>
                        }

                    </tbody>
                    @*  @await Component.InvokeAsync("Pager", Model)*@
                </table>
            </div>
        </div>

    </div>

</div>